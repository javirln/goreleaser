name: build-attested-image

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      packages: write
      contents: read
      attestations: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ghcr.io/chainloop-dev/platform/backend
      MIGRATION_IMAGE_NAME: ghcr.io/chainloop-dev/platform/backend-migrations
      CHAINLOOP_TOKEN: ${{ secrets.CHAINLOOP_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Install Chainloop
        run: |
          curl -sfL https://docs.chainloop.dev/install.sh | bash -s
  
      - name: Initialize Attestation
        id: init_attestation
        run: |
          attestation_id=$(chainloop attestation init --workflow ${CHAINLOOP_WORKFLOW_NAME} --project ${CHAINLOOP_PROJECT_NAME} --release --remote-state -o json | jq -r .attestationID)
          echo "attestation_id=$attestation_id" >> $GITHUB_OUTPUT
        env:
          CHAINLOOP_TOKEN: ${{ secrets.CHAINLOOP_TOKEN }}
          CHAINLOOP_WORKFLOW_NAME: "goreleaser"
          CHAINLOOP_PROJECT_NAME: "core"

      - name: Generate Container image checksum file for SLSA attestation
        run: |
          checksum_file="subjects-checksum.txt"
          touch "$checksum_file"

          # First the binaries
          binaries=$(cat dist/artifacts.json | jq -r '.[] | select(.type=="Binary") | select(.name=="chainloop"| not) | "\(.path) \(.name)"')
          echo "$binaries" | while IFS= read -r entry; do
            # Extract the path and name from the entry
            path=$(echo "$entry" | awk '{print $1}')
            # Calculate the checksum of the file
            checksum=$(sha256sum "$path" | awk '{print $1}')
            # Get the name from the entry
            name=$(echo "$entry" | awk '{print $2}')
            # Add it to the checksum file
            echo "$checksum *$name" >> $checksum_file
          done


      - uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2
        id: slsa-attest
        with:
          subject-checksums: subjects-checksum.txt

      - name: Attest SLSA attestation
        run: |
          chainloop attestation --name slsa-attestation add --value ${{ steps.slsa-attest.outputs.bundle-path }} --annotation github_attestation="${{ steps.slsa-attest.outputs.attestation-url }}" --kind SLSA_PROVENANCE --attestation-id ${{ steps.init_attestation.outputs.attestation_id }}


      - name: Finish and Record Attestation
        id: attestation_push
        if: ${{ success() }}
        run: |
          chainloop attestation push --attestation-id ${{ steps.init_attestation.outputs.attestation_id }}
          attestation_sha=$(chainloop wf run describe --id ${{ steps.init_attestation.outputs.attestation_id }} -o json | jq -r '.attestation.digest')
