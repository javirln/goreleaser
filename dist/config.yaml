project_name: Chainloop
env:
  - CGO_ENABLED=0
  - COMMON_LDFLAGS=-s -w
release:
  github:
    owner: javirln
    name: chainloop
  name_template: '{{.Tag}}'
  extra_files:
    - glob: ./.github/workflows/cosign.pub
builds:
  - id: control-plane
    targets:
      - linux_amd64_v1
    dir: .
    main: ./app/controlplane/cmd
    binary: control-plane
    builder: go
    gobinary: go
    command: build
    ldflags:
      - '{{ .Env.COMMON_LDFLAGS }}'
      - -X github.com/chainloop-dev/chainloop/app/controlplane/internal/server.Version={{ .Version }}
      - -X main.Version={{ .Version }}
  - id: artifact-cas
    targets:
      - linux_amd64_v1
    dir: .
    main: ./app/artifact-cas/cmd
    binary: artifact-cas
    builder: go
    gobinary: go
    command: build
    ldflags:
      - '{{ .Env.COMMON_LDFLAGS }}'
      - -X github.com/chainloop-dev/chainloop/app/artifact-cas/internal/server.Version={{ .Version }}
      - -X main.Version={{ .Version }}
  - id: cli
    targets:
      - darwin_amd64_v1
      - darwin_arm64
      - linux_amd64_v1
      - linux_arm64
    dir: .
    main: ./app/cli
    binary: chainloop
    builder: go
    gobinary: go
    command: build
    ldflags:
      - '{{ .Env.COMMON_LDFLAGS }}'
      - -X github.com/chainloop-dev/chainloop/app/cli/cmd.Version={{ .Version }}
  - id: chainloop-plugin-discord-webhook
    targets:
      - linux_amd64_v1
    dir: .
    main: ./app/controlplane/plugins/core/discord-webhook/v1/cmd
    binary: chainloop-plugin-discord-webhook
    builder: go
    gobinary: go
    command: build
    ldflags:
      - '{{ .Env.COMMON_LDFLAGS }}'
  - id: chainloop-plugin-smtp
    targets:
      - linux_amd64_v1
    dir: .
    main: ./app/controlplane/plugins/core/smtp/v1/cmd
    binary: chainloop-plugin-smtp
    builder: go
    gobinary: go
    command: build
    ldflags:
      - '{{ .Env.COMMON_LDFLAGS }}'
  - id: chainloop-plugin-dependency-track
    targets:
      - linux_amd64_v1
    dir: .
    main: ./app/controlplane/plugins/core/dependency-track/v1/cmd
    binary: chainloop-plugin-dependency-track
    builder: go
    gobinary: go
    command: build
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.builtBy=goreleaser
archives:
  - id: default
    builds:
      - cli
    name_template: chainloop-cli-{{ .Version }}-{{ .Os }}-{{ .Arch }}
    format: tar.gz
    files:
      - src: none*
  - id: binaries-cli
    builds:
      - cli
    name_template: '{{ .Binary }}-{{ .Os }}-{{ .Arch }}'
    format: binary
    files:
      - src: none*
snapshot:
  version_template: '{{ .Version }}-SNAPSHOT-{{ .ShortCommit }}'
checksum:
  name_template: checksums.txt
  algorithm: sha256
dockers:
  - ids:
      - control-plane
      - chainloop-plugin-discord-webhook
      - chainloop-plugin-smtp
      - chainloop-plugin-dependency-track
    goos: linux
    goarch: amd64
    goarm: "6"
    goamd64: v1
    dockerfile: app/controlplane/Dockerfile.goreleaser
    image_templates:
      - ghcr.io/chainloop-dev/chainloop/control-plane:{{ .Tag }}-amd64
    build_flag_templates:
      - --pull
      - --platform=linux/amd64
    use: buildx
  - ids:
      - control-plane
      - chainloop-plugin-discord-webhook
      - chainloop-plugin-smtp
      - chainloop-plugin-dependency-track
    goos: linux
    goarch: amd64
    goarm: "6"
    goamd64: v1
    dockerfile: app/controlplane/Dockerfile.goreleaser
    image_templates:
      - ghcr.io/chainloop-dev/chainloop/control-plane:{{ .Tag }}-arm64
    build_flag_templates:
      - --pull
      - --platform=linux/arm64
    use: buildx
  - goos: linux
    goarch: amd64
    goarm: "6"
    goamd64: v1
    dockerfile: app/controlplane/Dockerfile.migrations
    image_templates:
      - ghcr.io/chainloop-dev/chainloop/control-plane-migrations:{{ .Tag }}-amd64
    extra_files:
      - app/controlplane/pkg/data/ent/migrate/migrations
    build_flag_templates:
      - --pull
      - --platform=linux/amd64
    use: buildx
  - goos: linux
    goarch: amd64
    goarm: "6"
    goamd64: v1
    dockerfile: app/controlplane/Dockerfile.migrations
    image_templates:
      - ghcr.io/chainloop-dev/chainloop/control-plane-migrations:{{ .Tag }}-arm64
    extra_files:
      - app/controlplane/pkg/data/ent/migrate/migrations
    build_flag_templates:
      - --pull
      - --platform=linux/arm64
    use: buildx
  - ids:
      - artifact-cas
    goos: linux
    goarch: amd64
    goarm: "6"
    goamd64: v1
    dockerfile: app/artifact-cas/Dockerfile.goreleaser
    image_templates:
      - ghcr.io/chainloop-dev/chainloop/artifact-cas:{{ .Tag }}-amd64
    build_flag_templates:
      - --pull
      - --platform=linux/amd64
    use: buildx
  - ids:
      - artifact-cas
    goos: linux
    goarch: amd64
    goarm: "6"
    goamd64: v1
    dockerfile: app/artifact-cas/Dockerfile.goreleaser
    image_templates:
      - ghcr.io/chainloop-dev/chainloop/artifact-cas:{{ .Tag }}-arm64
    build_flag_templates:
      - --pull
      - --platform=linux/arm64
    use: buildx
  - ids:
      - cli
    goos: linux
    goarch: amd64
    goarm: "6"
    goamd64: v1
    dockerfile: app/cli/Dockerfile.goreleaser
    image_templates:
      - ghcr.io/chainloop-dev/chainloop/cli:{{ .Tag }}-amd64
    build_flag_templates:
      - --pull
      - --platform=linux/amd64
    use: buildx
  - ids:
      - cli
    goos: linux
    goarch: amd64
    goarm: "6"
    goamd64: v1
    dockerfile: app/cli/Dockerfile.goreleaser
    image_templates:
      - ghcr.io/chainloop-dev/chainloop/cli:{{ .Tag }}-arm64
    build_flag_templates:
      - --pull
      - --platform=linux/arm64
    use: buildx
docker_manifests:
  - name_template: ghcr.io/chainloop-dev/chainloop/control-plane:{{ .Tag }}
    image_templates:
      - ghcr.io/chainloop-dev/chainloop/control-plane:{{ .Tag }}-amd64
      - ghcr.io/chainloop-dev/chainloop/control-plane:{{ .Tag }}-arm64
    use: docker
  - name_template: ghcr.io/chainloop-dev/chainloop/control-plane:latest
    image_templates:
      - ghcr.io/chainloop-dev/chainloop/control-plane:{{ .Tag }}-amd64
      - ghcr.io/chainloop-dev/chainloop/control-plane:{{ .Tag }}-arm64
    use: docker
  - name_template: ghcr.io/chainloop-dev/chainloop/artifact-cas:{{ .Tag }}
    image_templates:
      - ghcr.io/chainloop-dev/chainloop/artifact-cas:{{ .Tag }}-amd64
      - ghcr.io/chainloop-dev/chainloop/artifact-cas:{{ .Tag }}-arm64
    use: docker
  - name_template: ghcr.io/chainloop-dev/chainloop/artifact-cas:latest
    image_templates:
      - ghcr.io/chainloop-dev/chainloop/artifact-cas:{{ .Tag }}-amd64
      - ghcr.io/chainloop-dev/chainloop/artifact-cas:{{ .Tag }}-arm64
    use: docker
  - name_template: ghcr.io/chainloop-dev/chainloop/control-plane-migrations:{{ .Tag }}
    image_templates:
      - ghcr.io/chainloop-dev/chainloop/control-plane-migrations:{{ .Tag }}-amd64
      - ghcr.io/chainloop-dev/chainloop/control-plane-migrations:{{ .Tag }}-arm64
    use: docker
  - name_template: ghcr.io/chainloop-dev/chainloop/control-plane-migrations:latest
    image_templates:
      - ghcr.io/chainloop-dev/chainloop/control-plane-migrations:{{ .Tag }}-amd64
      - ghcr.io/chainloop-dev/chainloop/control-plane-migrations:{{ .Tag }}-arm64
    use: docker
  - name_template: ghcr.io/chainloop-dev/chainloop/cli:{{ .Tag }}
    image_templates:
      - ghcr.io/chainloop-dev/chainloop/cli:{{ .Tag }}-amd64
      - ghcr.io/chainloop-dev/chainloop/cli:{{ .Tag }}-arm64
    use: docker
  - name_template: ghcr.io/chainloop-dev/chainloop/cli:latest
    image_templates:
      - ghcr.io/chainloop-dev/chainloop/cli:{{ .Tag }}-amd64
      - ghcr.io/chainloop-dev/chainloop/cli:{{ .Tag }}-arm64
    use: docker
changelog:
  format: '{{ .SHA }}: {{ .Message }} ({{ with .AuthorUsername }}@{{ . }}{{ else }}{{ .AuthorName }} <{{ .AuthorEmail }}>{{ end }})'
dist: dist
signs:
  - id: default
    cmd: cosign
    args:
      - sign-blob
      - --key=env://COSIGN_KEY
      - --output-signature=${signature}
      - --yes
      - ${artifact}
    signature: ${artifact}.sig
    artifacts: all
docker_signs:
  - id: default
    cmd: cosign
    args:
      - sign
      - --key=env://COSIGN_KEY
      - --yes
      - ${artifact}
    artifacts: all
env_files:
  github_token: ~/.config/goreleaser/github_token
  gitlab_token: ~/.config/goreleaser/gitlab_token
  gitea_token: ~/.config/goreleaser/gitea_token
source:
  name_template: '{{ .ProjectName }}-{{ .Version }}'
  format: tar.gz
gomod:
  gobinary: go
announce:
  twitter:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  mastodon:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    server: ""
  reddit:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    url_template: '{{ .ReleaseURL }}'
  slack:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    username: GoReleaser
  discord:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    author: GoReleaser
    color: "3888754"
    icon_url: https://goreleaser.com/static/avatar.png
  teams:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    color: '#2D313E'
    icon_url: https://goreleaser.com/static/avatar.png
  smtp:
    subject_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    body_template: 'You can view details from: {{ .ReleaseURL }}'
  mattermost:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    username: GoReleaser
  linkedin:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  telegram:
    message_template: '{{ mdv2escape .ProjectName }} {{ mdv2escape .Tag }} is out{{ mdv2escape "!" }} Check it out at {{ mdv2escape .ReleaseURL }}'
    parse_mode: MarkdownV2
  webhook:
    message_template: '{ "message": "{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}"}'
    content_type: application/json; charset=utf-8
  opencollective:
    title_template: '{{ .Tag }}'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out!<br/>Check it out at <a href="{{ .ReleaseURL }}">{{ .ReleaseURL }}</a>'
  bluesky:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
git:
  tag_sort: -version:refname
report_sizes: true
github_urls:
  download: https://github.com
gitlab_urls:
  download: https://gitlab.com
